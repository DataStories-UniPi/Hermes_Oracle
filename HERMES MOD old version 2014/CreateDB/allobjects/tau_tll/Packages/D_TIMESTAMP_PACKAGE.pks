Prompt drop Package D_TIMESTAMP_PACKAGE;
DROP PACKAGE D_TIMESTAMP_PACKAGE
/

Prompt Package D_TIMESTAMP_PACKAGE;
CREATE OR REPLACE PACKAGE D_Timestamp_Package AS

    PROCEDURE f_date(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, Y OUT pls_integer, M OUT pls_integer, D OUT pls_integer);
    PROCEDURE f_time(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, H OUT pls_integer, M OUT pls_integer, S OUT pls_integer, hundr_thS OUT pls_integer, tz_H OUT pls_integer, tz_M OUT pls_integer);
    FUNCTION year(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION month(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION day(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION hour(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION minute(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION second(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return float;
    FUNCTION tz_hour(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION tz_minute(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer) return pls_integer;
    PROCEDURE f_current(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, Year OUT pls_integer, Month OUT pls_integer, Day OUT pls_integer, H OUT pls_integer, M OUT pls_integer, S OUT pls_integer, hundr_thS OUT pls_integer, tz_H OUT pls_integer, tz_M OUT pls_integer);
    PROCEDURE f_ass_timestamp(m_Date_m_Year IN OUT pls_integer, m_Date_m_Month IN OUT pls_integer, m_Date_m_Day IN OUT pls_integer, m_Time_m_Hour IN OUT pls_integer, m_Time_m_Minute IN OUT pls_integer, m_Time_m_Second IN OUT pls_integer, m_Time_m_100thSec IN OUT pls_integer, m_Time_m_tzHour IN OUT pls_integer, m_Time_m_tzMinute IN OUT pls_integer, ts_m_Date_m_Year pls_integer, ts_m_Date_m_Month pls_integer, ts_m_Date_m_Day pls_integer, ts_m_Time_m_Hour pls_integer, ts_m_Time_m_Minute pls_integer, ts_m_Time_m_Second pls_integer, ts_m_Time_m_100thSec pls_integer, ts_m_Time_m_tzHour pls_integer, ts_m_Time_m_tzMinute pls_integer);
    PROCEDURE f_ass_date(m_Date_m_Year IN OUT pls_integer, m_Date_m_Month IN OUT pls_integer, m_Date_m_Day IN OUT pls_integer, m_Time_m_Hour pls_integer, m_Time_m_Minute pls_integer, m_Time_m_Second pls_integer, m_Time_m_100thSec pls_integer, m_Time_m_tzHour pls_integer, m_Time_m_tzMinute pls_integer, d_m_Year pls_integer, d_m_Month pls_integer, d_m_Day pls_integer);
    PROCEDURE f_add_interval(m_Date_m_Year IN OUT pls_integer, m_Date_m_Month IN OUT pls_integer, m_Date_m_Day IN OUT pls_integer, m_Time_m_Hour IN OUT pls_integer, m_Time_m_Minute IN OUT pls_integer, m_Time_m_Second IN OUT pls_integer, m_Time_m_100thSec IN OUT pls_integer, m_Time_m_tzHour IN OUT pls_integer, m_Time_m_tzMinute IN OUT pls_integer, i_m_Value double precision);
    PROCEDURE f_sub_interval(m_Date_m_Year IN OUT pls_integer, m_Date_m_Month IN OUT pls_integer, m_Date_m_Day IN OUT pls_integer, m_Time_m_Hour IN OUT pls_integer, m_Time_m_Minute IN OUT pls_integer, m_Time_m_Second IN OUT pls_integer, m_Time_m_100thSec IN OUT pls_integer, m_Time_m_tzHour IN OUT pls_integer, m_Time_m_tzMinute IN OUT pls_integer, i_m_Value double precision);
    PROCEDURE f_add(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts_year pls_integer, ts_month pls_integer, ts_day pls_integer, ts_hour pls_integer, ts_minute pls_integer, ts_second pls_integer, ts_hundr_thSec pls_integer, ts_tz_hour pls_integer, ts_tz_minute pls_integer, i_m_Value double precision, Year OUT pls_integer, Month OUT pls_integer, Day OUT pls_integer, H OUT pls_integer, M OUT pls_integer, S OUT pls_integer, hundr_thS OUT pls_integer, tz_H OUT pls_integer, tz_M OUT pls_integer);
    PROCEDURE f_sub(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts_year pls_integer, ts_month pls_integer, ts_day pls_integer, ts_hour pls_integer, ts_minute pls_integer, ts_second pls_integer, ts_hundr_thSec pls_integer, ts_tz_hour pls_integer, ts_tz_minute pls_integer, i_m_Value double precision, Year OUT pls_integer, Month OUT pls_integer, Day OUT pls_integer, H OUT pls_integer, M OUT pls_integer, S OUT pls_integer, hundr_thS OUT pls_integer, tz_H OUT pls_integer, tz_M OUT pls_integer);
    FUNCTION f_eq(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_n_eq(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_l(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_l_e(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_b(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_b_e(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer) return pls_integer;
    FUNCTION f_overlaps(m_Date_year pls_integer, m_Date_month pls_integer, m_Date_day pls_integer, m_Time_hour pls_integer, m_Time_minute pls_integer, m_Time_second pls_integer, m_Time_hundr_thSec pls_integer, m_Time_tz_hour pls_integer, m_Time_tz_minute pls_integer, ts1_m_Date_year pls_integer, ts1_m_Date_month pls_integer, ts1_m_Date_day pls_integer, ts1_m_Time_hour pls_integer, ts1_m_Time_minute pls_integer, ts1_m_Time_second pls_integer, ts1_m_Time_hundr_thSec pls_integer, ts1_m_Time_tz_hour pls_integer, ts1_m_Time_tz_minute pls_integer, ts2_m_Date_year pls_integer, ts2_m_Date_month pls_integer, ts2_m_Date_day pls_integer, ts2_m_Time_hour pls_integer, ts2_m_Time_minute pls_integer, ts2_m_Time_second pls_integer, ts2_m_Time_hundr_thSec pls_integer, ts2_m_Time_tz_hour pls_integer, ts2_m_Time_tz_minute pls_integer, ts3_m_Date_year pls_integer, ts3_m_Date_month pls_integer, ts3_m_Date_day pls_integer, ts3_m_Time_hour pls_integer, ts3_m_Time_minute pls_integer, ts3_m_Time_second pls_integer, ts3_m_Time_hundr_thSec pls_integer, ts3_m_Time_tz_hour pls_integer, ts3_m_Time_tz_minute pls_integer, ts4_m_Date_year pls_integer, ts4_m_Date_month pls_integer, ts4_m_Date_day pls_integer, ts4_m_Time_hour pls_integer, ts4_m_Time_minute pls_integer, ts4_m_Time_second pls_integer, ts4_m_Time_hundr_thSec pls_integer, ts4_m_Time_tz_hour pls_integer, ts4_m_Time_tz_minute pls_integer) return pls_integer;

END;
/

SHOW ERRORS;


